// –û—Å–Ω–æ–≤–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ

function startGameOne() {
    const randomNumber = Math.floor(Math.random() * 100) + 1;
    let guessedCorrectly = false;

    alert("–ü—Ä–∏–≤–µ—Ç! –ù–∞—á–∏–Ω–∞–µ–º –∏–≥—Ä—É '–£–≥–∞–¥–∞–π –ß–∏—Å–ª–æ'.\n–Ø –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100.");

    while (!guessedCorrectly) {
        let userInput = prompt("–í–≤–µ–¥–∏ —Å–≤–æ–µ –ø—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–µ (—á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100). –ï—Å–ª–∏ —Ö–æ—á–µ—à—å —Å–¥–∞—Ç—å—Å—è, –Ω–∞–∂–º–∏ '–û—Ç–º–µ–Ω–∞'.");
         if (userInput === null) {
            alert('–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞.');
            return;
        }

         const userGuess = parseInt(userInput);

         if (isNaN(userGuess)) {
            alert('–û—à–∏–±–∫–∞! –í–≤–µ–¥–∏ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ.');
            continue;
        }

        if (userGuess < 1 || userGuess > 100) {
            alert("–ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 1 –¥–æ 100. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑.");
            continue;
        }

        if (userGuess < randomNumber) {
            alert(`–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –ë–û–õ–¨–®–ï, —á–µ–º ${userGuess}. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ!`);
        } else if (userGuess > randomNumber) {
            alert(`–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –ú–ï–ù–¨–®–ï, —á–µ–º ${userGuess}. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ!`);
        } else {
                  guessedCorrectly = true;
        alert(`üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢—ã —É–≥–∞–¥–∞–ª! –ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –±—ã–ª–æ ${randomNumber}.`);
        }
      }
    }
    


//   –ó–∞–¥–∞–Ω–∏–µ 1

function findSmallNum(num1, num2) {
  if (num1 < num2) {
    return num1;
  } else {
    return num2;
}
}

findSmallNum(8, 4)

// –ó–∞–¥–∞–Ω–∏–µ 2

function checkEvenOdd(number) {
  if (number % 2 === 0) {
    return '–ß–∏—Å–ª–æ —á–µ—Ç–Ω–æ–µ';
  } else {
    return '–ß–∏—Å–ª–æ –Ω–µ—á–µ—Ç–Ω–æ–µ';
  }
}

checkEvenOrOdd(4)


// –ó–∞–¥–∞–Ω–∏–µ 3

function squareNum(number) {
  const square = number * number;
  console.log(`–ö–≤–∞–¥—Ä–∞—Ç —á–∏—Å–ª–∞ ${number} —Ä–∞–≤–µ–Ω ${square}`);
}

squareNum(5);

// –ó–∞–¥–∞–Ω–∏–µ 4

function checkUserAge() {
  const ageString = prompt("–°–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç?");

  if (ageString === null) {
    alert("–í–≤–æ–¥ –±—ã–ª –æ—Ç–º–µ–Ω–µ–Ω.");
    return;
  }

  const age = parseInt(ageString);

  if (age < 0) {
    alert('–í—ã –≤–≤–µ–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ');
  } 

  else if (age >= 0 && age <= 12) {
    alert('–ü—Ä–∏–≤–µ—Ç, –¥—Ä—É–≥!');
  } 

  else if (age >= 13) {
    alert('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!');
  } 

  else {
    alert('–í—ã –≤–≤–µ–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ'); 
  }
}


checkUserAge(); 

// –ó–∞–¥–∞–Ω–∏–µ 5    

function multiplyIfNumbers(param1, param2) {
  const num1 = Number(param1);
  const num2 = Number(param2);

  if (isNaN(num1) || isNaN(num2)) {
    return '–û–¥–Ω–æ –∏–ª–∏ –æ–±–∞ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–µ —è–≤–ª—è—é—Ç—Å—è —á–∏—Å–ª–æ–º';
  } else {
    return num1 * num2; [[1]]
  }
}

multiplyIfNumbers(3, 4);

// –ó–∞–¥–∞–Ω–∏–µ 6

function numberCube() {
  const userInput = prompt("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ:");

  const number = Number(userInput); 

  if (isNaN(number)) {
    return '–ü–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º';
  } else {
    const cubedNum = number * number * number;
    return `${number} –≤ –∫—É–±–µ —Ä–∞–≤–Ω—è–µ—Ç—Å—è ${cubedNum}`;
  }
}

numberCube();

// –ó–∞–¥–∞–Ω–∏–µ 7

function createCircle(radius) {
  const circle = {
    radius: radius,
    getArea: function() {
      return Math.PI * this.radius * this.radius;
    },
    getPerimeter: function() {
      return 2 * Math.PI * this.radius;
    }
  };
  return circle;
}

createCircle();
  

